@page "/fetchdata"

@using Newtonsoft.Json
@using TestAppRazorMAUI.Data
@inject FetchSituations FetchAllSituations
@*FetchAllSituations FetchSituations*@
<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>
@*<p>@result.RESPONSE.RESULT[0].Situation[0].Deviation[0].Header</p>
<p>@result?.RESPONSE?.RESULT?[0].Situation?.Length</p>

<p>Nytt under</p>*@
@*@if (result?.RESPONSE?.RESULT?[0].Situation?.Length > 0)
{
	@foreach (var situation in result.RESPONSE.RESULT[0].Situation)
	{
		<p>@situation.Deviation[0].IconId</p>
	}
}
else 
{
	<p>Inga situationer hittades</p>
}

@if (forecasts == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>Date</th>
				<th>Temp. (C)</th>
				<th>Temp. (F)</th>
				<th>Summary</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var forecast in forecasts)
			{
				<tr>
					<td>@forecast.Date.ToShortDateString()</td>
					<td>@forecast.TemperatureC</td>
					<td>@forecast.TemperatureF</td>
					<td>@forecast.Summary</td>
				</tr>
			}
		</tbody>
	</table>
}

@code {
	private Rootobject result;

	protected override async Task OnInitializedAsync()
	{
		//forecasts = await ForecastService.GetForecastAsync(DateTime.Now);

		//result = FetchAllSituations.FetchAllSituations();

		result = FetchAllSituations.FetchAllSituations();
		//var result = JsonConvert.DeserializeObject<Rootobject>(responsestring);
		//var newstring = result.RESPONSE.RESULT[0].INFO.SSEURL;
	}
}
*@